/* Check for Valid specifier */
            
            if (containsStringSpecifier(format[input_string_index])  != true) /* If its not valid specifier */
            {   
                /* Print a message and break the loop */
                printf("Error not a valid specifier\n");
                break;
            }
            else /* If its valid specifier */
            {
                /* Get the corresponding argiment from the argiment list */
                /* Define an array of specifiers and their associated data types */
                type_list types[] = {
                    {'c', "char"},
                    {'i', "int"},
                    {'f', "float"},
                    {'s', "string"},
                    {0, NULL} /* Use 0 to indicate the end of the list */
                };

                /* Initialize dataType_index with -1 to indicate no match */
                dataType_index = -1;

                /* Loop to find the data type associated with the specifier */
                for (typesLoop_index = 0; types[typesLoop_index].theSpicifier != 0; typesLoop_index++)
                {
                    if (format[input_string_index] == types[typesLoop_index].theSpicifier)
                    {
                        dataType_index = typesLoop_index;
                        break;
                    }
                }

                if (dataType_index != -1)
                {
                    /* Process the argument based on the determined data type */
                    if (format[input_string_index] == 'c')
                    {
                        char value = va_arg(input_string_arg, int);
                        char *formated_argiment = charToString(value);
                        appendToCharBuffer(input_string_buffer, formated_argiment);
                    }
                    else if (format[input_string_index] == 'i')
                    {
                        int value = va_arg(input_string_arg, int);
                        char *formated_argiment = intToString(value);
                        appendToCharBuffer(input_string_buffer, formated_argiment);
                    }
                    else if (format[input_string_index] == 'f')
                    {
                        double value = va_arg(input_string_arg, double);
                        char *formated_argiment = floatToString(value);
                        appendToCharBuffer(input_string_buffer, formated_argiment);                    
                    }
                    else if (format[input_string_index] == 's')
                    {
                        char *value = va_arg(input_string_arg, char *);
                        appendToCharBuffer(input_string_buffer, value);                       
                    }
                } 
                else
                {
                    printf("Unknown specifier: %c\n", format[input_string_index]);
                    break;
                }


                /* Write the content of the buffer to the main output and break the loop */
                writeToConsole(input_string_buffer);

                /* Incrise the charchter index after the specifier to get the next charchter */
                input_string_index++;

            }
                        